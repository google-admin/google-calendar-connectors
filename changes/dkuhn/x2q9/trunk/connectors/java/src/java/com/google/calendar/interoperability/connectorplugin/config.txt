# Copyright (c) 2007 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 

# ========
# WARNING:
# ========
# Be sure to make a backup copy of this file. The programs reading this file
# might decide to encrypt and/or obfuscate some of the content (like passwords).
# Do not expect this file to remain as easily readable as it is now...

# The base directory where the Exchange connector expects the API_IN and API_OUR subfolders
general.baseDirectory=C:\\Program Files\\Google\\Google Calendar Connector Plug-In

# General logging setup: where to find the file, whether to log verbose (for debugging)
general.logFile=c:\\Google\\logs\\Plugin.log
general.verboseLogging=false
general.logMessages=true

# Proxy settings for http and https. Should be in the format host:port
# commenting line out will instruct the program not to use a proxy
# general.httpProxy=ourhttp-proxy.mycompany.com:8080
# general.httpsProxy=ourhttps-proxy.mycompany.com:8181

# GData login information
# User must admin access to the Gapps domain and the provisioning API must be enable.
gdata.username=admin@mycompany.com
gdata.password=adminpassword01
gdata.domain=mycompany.com

# An optional step in setting up the Google Calendar Connector Plug-In is specifying 
# a whitelist or blacklist LDAP query in config.txt. This is useful if your organization
# has users who exist in both Active Directory and Google Apps. This feature allows you 
# to control what accounts are imported into Exchange to support Exchange lookup of a 
# Google Apps user's free/busy data. If no blacklist
# or whitelist is specified, all these settings are ignored.
# 
# ldap.url: This setting specifies the Active Directory LDAP server to connect to. 
# For example: ldap.url=LDAPS://ldap1.acme.com
#
# ldap.user: The userPrincipalName for the user account used by the plugin to perform 
# Active Directory queries for ldap.whitelist and ldap.blacklist values.
#
#ldap.password: The password for the ldap.user account
#
# ldap.authMethod: This setting defines the authentication method used to access 
# LDAP; supported modes are "simple"and "DIGEST-MD5". Default method is "DIGEST-MD5"
# if none is specified.
#
# NOTE: To use DIGEST-MD5, the configured windows user account in Active Directory 
# must have enabled "Store password using reversible encryption" set via Active 
# Directory Users and Computers. Once this value is enabled the password must be 
# changed in order to store the password in the reversible encryption format.
#
# ldap.base is the search base DN for the ldap.blacklist and ldap.whitelist queries. 
#
# ldap.whitelist: This setting defines an LDAP filter of users to include in the 
# Google Apps directory sync import.
#
# ldap.whitelist=(mail=*@exchange.acme)(objectcategory=person)
# This filter returns a list of all user and contact objects that have an internal 
# mail address of @exchange.acme.com. This includes mailbox enabled users, mail 
# enabled users  and contacts.
#
# ldap.blacklist: This setting defines an LDAP filter of users to exclude from the 
# Google Apps directory sync import.
#
# ldap.blacklist=(&(objectClass=user)(msExchHomeServerName=*))
#
# This filter returns a list of all user objects that have an Exchange mailbox. 
#
# ldap.blindFaith enables the Google Calendar Connector Plug-In to accept any TLS 
# certificate when connecting to a secure LDAP server regardless of whether the certificate
# is trusted by a Certificate Authority listed in the machine's Trust Root Certificates
# certificate store.
#
# ldap.domainMap: This setting allows the definition of SMTP domain name mappings. 
# This value is used in conjunction with ldap.blacklist and/or ldap.whitelist. The 
# mapping is applied to the LDAP black/white list response and is used to match 
# against the Google Apps user SMTP address returned from the GData API.
# This setting maps an internal SMTP address from Exchange to the Google Apps SMTP 
# address. For example: ldap.domainMap=exchange.acme.com,acme.com
# An Exchange user has the primary SMTP address of user@exchange.acme.com would 
# match with the Google Apps user which has the SMTP address user@acme.com.
# To configure multiple domain mappings use ";" as the delimiter between the domain 
# mapping values. For Example: 
# ldap.domainMap=acme.com,exchange.acme.com;company.com,exchange.company.com

ldap.url=LDAPS://myldapserver.mycompany.com
ldap.user=administrator@mycompany.com
ldap.password=mypassword02
ldap.authMethod=simple
ldap.base=dc=corp,dc=goo,dc=lab
#ldap.blacklist=(&(objectClass=user)(mail=black*))
#ldap.whitelist=(&(objectClass=user)(mail=white*))
ldap.blindFaith=true
#ldap.domainMap=


# After new users have been imported by the tool, certain adjustments to their
# representation in Exchange need to be made to enable free/busy lookup 
# through the connector. Until this has happened, email can be sent to those
# users, but free/busy lookup will fail. The tool is called on a regular
# basis by this service. These parameters should not need to be changed by
# the system administrator. The values for "timeout" and "frequency" are
# both in seconds. Timeout is the time in seconds that the program will wait
# before killing the external process (in case it hangs). Frequency is the
# time the program will wait after execution to call the tool again.  
fbfix.command=freebusybuilder.exe
fbfix.timeout=60
fbfix.frequency=1080

# If encryption is used to make passwords non-readable, this property can
# be used to determine what certificate name to use
#win.certname=insertCertnameHere